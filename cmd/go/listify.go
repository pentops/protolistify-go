package main

import (
	"github.com/pentops/protoc-gen-listify/listify/v1"
	"google.golang.org/protobuf/compiler/protogen"
	"google.golang.org/protobuf/proto"
)

const (
	listifyFileSuffix = ".pb.listify.go"
)

// genFile generates a .pb.listify.go file containing helper methods on services
// requests for generalizing sorting, filtering, searching, and pagination
func genListifyFile(gen *protogen.Plugin, file *protogen.File) (*protogen.GeneratedFile, error) {
	if len(file.Services) == 0 {
		return nil, nil
	}

	filename := file.GeneratedFilenamePrefix + listifyFileSuffix

	g := gen.NewGeneratedFile(filename, file.GoImportPath)

	genListifyHeaderContent(gen, file, g)

	generated, err := genListifyFileContent(gen, file, g)
	if err != nil {
		return nil, err
	}

	if !generated {
		g.Skip()
		return nil, nil
	}

	return g, nil
}

func genListifyHeaderContent(gen *protogen.Plugin, file *protogen.File, g *protogen.GeneratedFile) {
	g.P("// Code generated by protoc-gen-listify. DO NOT EDIT.")
	g.P()
	g.P("package ", file.GoPackageName)
	g.P()
	g.P("var (")
	g.P("ErrFilterValidationInvalidField = ", errorPackage.Ident("New"), `("invalid field name(s) for filter")`)
	g.P("ErrFilterValidationInvalidRangeMinMaxMissing = ", errorPackage.Ident("New"), `("invalid range min and/or max must be provided")`)
	g.P("ErrFilterValidationInvalidRangeMinMax = ", errorPackage.Ident("New"), `("invalid range min/max")`)
	g.P("ErrFilterValidationInvalidRangeType = ", errorPackage.Ident("New"), `("invalid type for range")`)
	g.P("ErrFilterValidationInvalidValue = ", errorPackage.Ident("New"), `("invalid value(s) for filter")`)
	g.P()
	g.P("ErrSortValidationInvalidField = ", errorPackage.Ident("New"), `("invalid value(s) for sort")`)
	g.P("ErrSortValidationInvalidDirection = ", errorPackage.Ident("New"), `("conflicting direction values for sort")`)
	g.P()
	g.P(`uuidMatch = `, regexpPackage.Ident("MustCompile"), `("(?i)^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$")`)
	g.P(`dateMatch = `, regexpPackage.Ident("MustCompile"), `("^([0-9]{4}-?([0-9]{2})?-?([0-9]{2})?)$")`)
	g.P(")")
	g.P()
}

func genListifyFileContent(gen *protogen.Plugin, file *protogen.File, g *protogen.GeneratedFile) (bool, error) {
	genFilterTypeValidators(gen, g)

	for _, service := range file.Services {
		for _, method := range service.Methods {
			// Skip streaming methods
			if method.Desc.IsStreamingClient() || method.Desc.IsStreamingServer() {
				continue
			}

			// Only generate for methods with the listify.api option set to true
			methodAnnotations, ok := proto.GetExtension(method.Desc.Options(), listify.E_Api).(*listify.MethodOptions)
			if ok {
				if methodAnnotations == nil || !methodAnnotations.Enable {
					continue
				}
			}

			err := genFilterableContent(gen, method, g)
			if err != nil {
				return false, err
			}

			err = genSortableContent(gen, method, g)
			if err != nil {
				return false, err
			}
		}
	}

	return true, nil
}
